@using epsi.Models;
@{
    ViewBag.Title = "Index";

}
@model IEnumerable<epsi.Models.RuleProduct>
@(Html.Kendo().Grid<epsi.Models.RuleProduct>()
    .Name("grid")
    .Columns(columns =>
    {
        columns.Bound(p => p.Title);
        columns.Bound(p => p.Description);
        columns.Bound(p => p.Price).Format("{0:0,0}");
        columns.Bound(p => p.IsDefault);
        //columns.Bound(p => p.IsDefault).ClientTemplate("<input type='radio' onclick='changeSelection(this)' name='IsDefault' #= IsDefault? checked='checked' : '' # />");
        columns.Command(command => { command.Destroy(); }).Width(90);
    })
    .ToolBar(toolbar =>
    {
        toolbar.Create();
        toolbar.Save();
    })
    .Editable(editable => editable.Mode(GridEditMode.InCell))
    .Pageable()
    .DataSource(dataSource => dataSource
        .Ajax()
        .Batch(true)
        .PageSize(20)
        .Events(events => events.Error("error_handler"))
        .Model(model => { model.Id(p => p.RuleProductId); model.Field(p => p.RuleProductId).Editable(false); })
        .Create(create => create.Action("Create", "RuleProduct",new { productid = ViewBag.ProductId }))
        .Read(read => read.Action("Get", "RuleProduct", new { productid = ViewBag.ProductId }))
        .Update(update => update.Action("Edit", "RuleProduct"))
        .Destroy(destroy => destroy.Action("Delete", "RuleProduct"))
    )
)
<script type="text/javascript">
    function changeSelection(element) {
        $(element).closest(".t-grid").find($(".t-state-selected")).removeClass("t-state-selected");
        $(element).closest("tr").addClass("t-state-selected");
    }

    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
        }
    }
</script>
