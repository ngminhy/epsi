@model epsi.ViewModels.ProductDto
@using Kendo.Mvc.UI;
@{
    ViewBag.Title = "Create";
}

<script type="text/javascript">
    $(document).ready(function () {

        wndNewContact = $("#imgBrowser").kendoWindow({
            actions: ["Close", "Refresh"],
            Title: "Choose your file:",
            visible: false,
            dragable: true,
            modal: true,
            width: 800,
            height: 415
            //minHeight:300,

            //height:300

        }).data("kendoWindow")

        $("#upload").click(function () {
            wndNewContact.open();
            wndNewContact.center()
        });

        $("#imgBrowser").kendoImageBrowser({

            transport: {
                type: "imagebrowser-aspnetmvc",
                read: "/ImageBrowser/Read",
                destroy: {
                    url: "/ImageBrowser/Destroy",
                    type: "POST"
                },
                create: {
                    url: "/ImageBrowser/Create",
                    type: "POST"
                },
                thumbnailUrl: "/ImageBrowser/Thumbnail",
                uploadUrl: "/ImageBrowser/Upload",
                imageUrl: "~/Content/Images/{0}"
            },
            change: function () {
                //this.value(); //Selected image URL
                $("#MainImage").val(this.value());
                wndNewContact.close();
            }
        });
        if ($('#ProductId').val() == 0) {
            $('#submit').click(function () {

                var folder = $('#Folder').val();
                if (folder) {
                    var path = 'Products/' + folder;
                    $.ajax({
                        type: "POST",
                        url: "/ImageBrowser/Read/",
                        data: { path: path },
                        dataType: "json",
                        async: false,
                        success: function (data) {
                            //alert('data');
                            $('#ImagesJson').val(JSON.stringify(data));
                        },
                        error: function (xhr, ajaxOptions, thrownError) {
                            alert(xhr.status);
                            alert(thrownError);
                        }
                    });


                }
                //return false;
            });
        }
    });

</script>
@using (Html.BeginForm(ViewContext.RouteData.Values["Action"].ToString(), ViewContext.RouteData.Values["Controller"].ToString(), FormMethod.Post, new { @class = "form-horizontal" }))
{
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Product</legend>
        <div class="form-group">
            @Html.LabelFor(model => model.Name, new { @class = "col-sm-3 control-label no-padding-right" })
            <div class="col-sm-9">
                @Html.EditorFor(model => model.Name, new { @class = "form-control" })
                @Html.EditorFor(model => model.IsHome) Homepage
                @Html.EditorFor(model => model.IsSpecial) Special
                @Html.EditorFor(model => model.IsNew) New
                @Html.ValidationMessageFor(model => model.Name)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Code, new { @class = "col-sm-3 control-label no-padding-right" })
            <div class="col-sm-9">
                @Html.EditorFor(model => model.Code, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Code)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Colors, new { @class = "col-sm-3 control-label no-padding-right" })
            <div class="col-sm-9">
                @Html.EditorFor(model => model.Colors, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Colors)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Material, new { @class = "col-sm-3 control-label no-padding-right" })
            <div class="col-sm-9">
                @Html.EditorFor(model => model.Material, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Material)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Size, new { @class = "col-sm-3 control-label no-padding-right" })
            <div class="col-sm-9">
                @Html.EditorFor(model => model.Size, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Size)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Power, new { @class = "col-sm-3 control-label no-padding-right" })
            <div class="col-sm-9">
                @Html.EditorFor(model => model.Power, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Power)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.OtherFeatures, new { @class = "col-sm-3 control-label no-padding-right" })
            <div class="col-sm-9">
                @Html.EditorFor(model => model.OtherFeatures, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.OtherFeatures)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Description, new { @class = "col-sm-3 control-label no-padding-right" })
            <div class="col-sm-9">
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Description)
            </div>
        </div>
   
        <div class="form-group">
            @Html.LabelFor(model => model.MainImage, new { @class = "col-sm-3 control-label no-padding-right" })
            <div class="col-sm-9">
                @Html.EditorFor(model => model.MainImage, new { @class = "form-control" })<a href="#" class="k-tool-icon k-insertImage" id="upload" style="text-decoration:none;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</a>
                @Html.ValidationMessageFor(model => model.MainImage)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Price, new { @class = "col-sm-3 control-label no-padding-right" })
            <div class="col-sm-9">
                @Html.EditorFor(model => model.Price, new { @class = "number form-control" })
                @Html.ValidationMessageFor(model => model.Price)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.BasePrice, new { @class = "col-sm-3 control-label no-padding-right" })
            <div class="col-sm-9">
                @Html.EditorFor(model => model.BasePrice, new { @class = "number form-control" })
                @Html.ValidationMessageFor(model => model.BasePrice)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Content, new { @class = "col-sm-3 control-label no-padding-right" })
            <div class="col-sm-9">
                @(Html.Kendo().EditorFor(model => model.Content).Encode(false)
                    .ImageBrowser(imageBrowser => imageBrowser
                            .Image("~/Content/Images/{0}")
                            .Read("Read", "ImageBrowser")
                            .Create("Create", "ImageBrowser")
                            .Destroy("Destroy", "ImageBrowser")
                            .Upload("Upload", "ImageBrowser")
                            .Thumbnail("Thumbnail", "ImageBrowser"))
                )
            </div>

        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Active, new { @class = "col-sm-3 control-label no-padding-right" })
            <div class="col-sm-9">
                @Html.EditorFor(model => model.Active, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Active)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CategoryId,"Parent Category", new { @class = "col-sm-3 control-label no-padding-right" })
            <div class="col-sm-9">
                @(Html.Kendo().DropDownListFor(model => model.CategoryId).Name("ParentId")
                          .DataTextField("Name")
                          .DataValueField("CategoryId")
                          .DataSource(source =>
                          {
                              source.Read(read =>
                              {
                                  read.Action("GetCascadeCategories", "product");
                              });
                          })
                )
                @Html.ValidationMessageFor(model => model.CategoryId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryId,"Child Category", new { @class = "col-sm-3 control-label no-padding-right" })
            <div class="col-sm-9">
                @(Html.Kendo().DropDownListFor(model => model.CategoryId).Name("CategoryId")
                          .DataTextField("Name")
                          .DataValueField("CategoryId")
                           .DataSource(source =>
                           {
                               source.Read(read =>
                               {
                                   read.Action("GetCascadeSubCategories", "product")
                                       .Data("filterSubCategory");
                               })
                               .ServerFiltering(true);
                           })
              .Enable(false)
              .AutoBind(false)
              .CascadeFrom("ParentId")
                )
                @Html.ValidationMessageFor(model => model.CategoryId)
            </div>
        </div>
        <script>
            function filterSubCategory() {
                return {
                    categories: $("#ParentId").val()
                };
            }
        </script>
        <div class="form-group">
            @Html.LabelFor(model => model.PageURL, new { @class = "col-sm-3 control-label no-padding-right" })
            <div class="col-sm-9">
                @Html.EditorFor(model => model.PageURL, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PageURL)
            </div>
        </div>
       
        <div class="editor-label">
            @Html.HiddenFor(model => model.ProductId)
        </div>
        <div class="form-group">
            <label class="col-sm-3 control-label no-padding-right"></label>
            <div class="col-sm-9">
                <input type="submit" value="Create or Update" class="btn btn-info" />
            </div>

        </div>
    </fieldset>
}
<div>
    @Html.ActionLink("Back to List", "Index")
    <div id="imgBrowser" style="display: none;">
    </div>
</div>
